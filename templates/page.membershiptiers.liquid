{{ 'customer.css' | asset_url | stylesheet_tag }}

<div class="customer account">
  <div>
    <h1>{{ 'customer.account.title' | t }}</h1>
    <a href="/account">Order History</a> | 
    <a href="/pages/subscriptions">Subscriptions</a> | 
    <a href="/pages/upcoming-shipments">Upcoming Shipments</a> | 
    <a href="/pages/payment-methods">Payment Methods</a> | 
    <a href="/pages/membership-tiers">Membership Tiers</a> |
    <a href="/pages/allocations">Allocations</a> | 
    <a href="/account/addresses">Addresses</a> | 
    <a href="{{ routes.account_logout_url }}">{{ 'customer.log_out' | t }}</a>
  </div>

  <div>
    <div>

      <h2>Membership Tiers</h2>

      <h4></h4>
      <table id='membership-tiers-tree'>
        <thead>
          <tr>
            <th style='display:none'> </th>
            <th>
              Image
            </th>
            <th>
              Name
            </th>
            <th>
              Discount
            </th>
            <th>
              Requirements
            </th>
          </tr>
        </thead>
        <tbody id='membership-tiers-items'>
          
        </tbody>
      </table>

    </div>
  </div>
</div>


<style>

</style>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

  {% if shop.permanent_domain == 'winehub-demo.myshopify.com' %}
    var app_domain = 'https://wineclub-demo.digitact.co.uk';
  {% else %}
    var app_domain = 'https://howards-folly-wine.digitact.co.uk';
  {% endif %}
  
    $(function () {
      //alert("Loading content");  
      getAllocations();        
    }); 

  function rebuildRequirementsString(requirements) {
    let pt = ''
    let ptv = ''
    let mmp = ''
    let mtslo = ''
    let mtp = ''
    let sota = ''
    let sotm = ''
    let nmsota = ''
    let nmsotm = ''
    let sau = ''
    let dota = ''
    let dotp = ''
    let ppa = ''
    
        if(requirements.hasOwnProperty('TierBased'))
        {
            const tierBased = requirements['TierBased'];
            const previousTier = tierBased['PreviousTier'];
            const minTierPeriod = tierBased['MinTierPeriod'];
            if(previousTier.hasOwnProperty('Id'))
            {
                pt = previousTier['Id']
                ptv = previousTier['Name']
            }

            if(minTierPeriod > -1)
            {
                mtp = (minTierPeriod);
            }
        }

        if(requirements.hasOwnProperty('TimeBased'))
        {
            const timeBased = requirements['TimeBased'];
            const minMembershipPeriod = timeBased['MinMembershipPeriod'];
            const maxTimeSinceLastOrder = timeBased['MaxTimeSinceLastOrder'];

            if(minMembershipPeriod > -1)
            {
                mmp = (minMembershipPeriod);
            }

            if(maxTimeSinceLastOrder > -1)
            {
                mtslo = (maxTimeSinceLastOrder);
            }
        }

        if(requirements.hasOwnProperty('SpendingBased'))
        {
            const spendingBased = requirements['SpendingBased'];
            const clubMemberSpendingOverTime = spendingBased['ClubMemberSpendingOverTime'];
            const nonMemberSpendingOverTime = spendingBased['NonMemberSpendingOverTime'];
            const spendingAutoUpgrade = spendingBased['SpendingAutoUpgrade'];

            if(clubMemberSpendingOverTime && clubMemberSpendingOverTime.hasOwnProperty('Amount') && clubMemberSpendingOverTime.hasOwnProperty('Months'))
            {
                if(clubMemberSpendingOverTime['Amount'] > -1)
                {
                    sota = (clubMemberSpendingOverTime['Amount']);
                }

                if(clubMemberSpendingOverTime['Months'] > -1)
                {
                    sotm = (clubMemberSpendingOverTime['Months']);
                }
            }

            if(nonMemberSpendingOverTime && nonMemberSpendingOverTime.hasOwnProperty('Amount') && nonMemberSpendingOverTime.hasOwnProperty('Months'))
            {
                if(nonMemberSpendingOverTime['Amount'] > -1)
                {
                    nmsota = (nonMemberSpendingOverTime['Amount']);
                }

                if(nonMemberSpendingOverTime['Months'] > -1)
                {
                    nmsotm = (nonMemberSpendingOverTime['Months']);
                }
            }

            if(spendingAutoUpgrade > -1)
            {
                $('#form_spendingAutoUpgrade').val(spendingAutoUpgrade);
            }
        }

        if(requirements.hasOwnProperty('FrequencyBased'))
        {
            const frequencyBased = requirements['FrequencyBased'];
            const deliveriesOverTime = frequencyBased['DeliveriesOverTime'];
            if(deliveriesOverTime && deliveriesOverTime.hasOwnProperty('Amount') && deliveriesOverTime.hasOwnProperty('Months'))
            {
                if(deliveriesOverTime['Amount'] > -1)
                {
                    dota = (deliveriesOverTime['Amount']);
                }

                if(deliveriesOverTime['Period'] > -1)
                {
                    dotp = (deliveriesOverTime['Period']);
                }
            }
        }

        if(requirements.hasOwnProperty('BuyInBased'))
        {
            const buyInBased = requirements['BuyInBased']
            const premiumPurchaseAmount = buyInBased['PremiumPurchaseAmount'];
            if(premiumPurchaseAmount > -1)
            {
                ppa = (premiumPurchaseAmount);
            }
        }

    let breakTag = '<br>'; //could be ' | ' for single line
    if(pt && pt.length) pt = ptv + " member" + breakTag; else pt = ''
    if(mmp && mmp.length) mmp += " months min membership" + breakTag; else mmp = ''
    if(mtslo && mtslo.length) mtslo += " months since last order" + breakTag ; else mtslo = ''
    if(mtp && mtp.length) mtp += " months in " +  ((pt && pt.length) ? ptv : "current tier") + breakTag; else mtp = ''
    if(sota && sota.length && sotm && sotm.length) { sota += " spent on subscriptions over "; sotm += " months" + breakTag; } else {sota = ''; sotm = '';}
    if(nmsota && nmsota.length && nmsotm && nmsotm.length) { nmsota += " spent on general eCommerce over "; nmsotm += " months" + breakTag; } else {nmsota = ''; nmsotm = '';}
    if(sau && sau.length) sau += " spent will auto-upgrade" + breakTag; else sau = ''
    if(dota && dota.length && dotp && dotp.length) { dota += " deliveries over "; dotp += " months" + breakTag; } else { dota = ''; dotm = ''; }
    if(ppa && ppa.length) ppa += " to immediately purchase tier membership" + breakTag; else ppa = ''


    return(pt + mtp + mmp + mtslo + sota + sotm + nmsota + nmsotm + sau + dota + dotp + ppa);
  }
  
  function getAllocations() {
      $.ajax({
        url: app_domain+'/app/api/customer_membership_tiers/{{customer.id}}',
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (response) {
          data = response.customer_memberships;
          
          if (data && data.length) {
            $(data).each(function (index, item) {
              //TODO: Render this as a tree...?
              //for now just do rows
              let id = item["id"];
              let name = item["name"];
              let image = item["image"];
              let discountBenefit = item["discountBenefit"];
              let requirements = item["requirements"];
              
              let rowId = 'tier-item-' + id;
              let row = '<tr id="' + rowId + '">';
              row += '<td id="tier-id" style="display:none"><p style="display:none">' + id + '</p></td>';
              row += '<td id="tier-image"><img src="' + image + '" style="max-height:120px" /></td>';
              row += '<td id="tier-name">' + name + '</td>';
              row += '<td id="tier-discount">' + discountBenefit + '%</td>';
              row += '<td id="tier-requirements">' + rebuildRequirementsString(requirements) + '</td>';
              row += '</tr>';
              
              $('#membership-tiers-items').append(row)
            })
          }
          else {
            $('#membership-tiers-tree').html('<p>You are not a member of any tiers.</p>');
          }
        },
        error: function (data) { alert(data.responseText); }
      }); 
  }
  
</script>

